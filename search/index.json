[{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"http://localhost:1313/hugo-myblog/p/hello-world/cover_hu_e95a4276bf860a84.jpg","permalink":"http://localhost:1313/hugo-myblog/p/hello-world/","title":"Hello World"},{"content":"MVC架构\nIOC与DI 接口-\u0026gt;IOC-\u0026gt;DI-\u0026gt;调用 @Component: 将当前类交给IOC容器存储 @Autowired: 应用程序运行时，会自动的査询该类型的bean对象,并赋值给该成员变量\n一、MVC 架构模式 基本概念 MVC（Model-View-Controller） 是一种分层架构设计模式：\nModel（模型）：数据层，处理业务逻辑和数据持久化 View（视图）：展示层，负责用户界面呈现 Controller（控制器）：协调层，处理用户输入并调用模型/视图 目录结构 下面是我创建的一个应用MVC架构的建议框架 工作流程 用户在浏览器输入 URL 或点击按钮，发送 HTTP 请求。 请求被 DispatcherServlet（Spring MVC 的核心）拦截，并匹配对应的 Controller。 Controller 处理请求，调用 Service 层执行业务逻辑。 Service 层可能会调用 DAO 层访问数据库，并返回数据。 Controller 获取数据后，返回 JSON 响应或视图模板（前后端不分离时）。 View 层将数据渲染，并呈现给用户。 二、IOC与DI IOC（Inversion of Control，控制反转）是一种设计思想，主要目的是将对象的创建和依赖管理交给 Spring 容器，而不是在代码中手动创建对象。而DI（Dependency Injection，依赖注入）是 IOC 的实现方式。它用于自动注入对象，避免手动创建依赖对象，提高可维护性。\n传统方式 1 UserService userService = new UserServiceImpl(); ","date":"2025-02-28T00:00:00Z","permalink":"http://localhost:1313/hugo-myblog/p/mvc%E4%B8%8E%E8%A7%A3%E8%80%A6/","title":"MVC与解耦"},{"content":"二级标题 1 2 3 哈哈哈 哈哈 哈\n1 // 代码块 ","date":"2025-02-27T00:00:00Z","permalink":"http://localhost:1313/hugo-myblog/p/markdown/","title":"markdown"},{"content":"Spring Quickstart\nget method 获取params参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package com.example.demo.controller; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController; import com.example.demo.pojo.ApiResponse; @RestController public class helloController { // 类名建议首字母大写 @RequestMapping(\u0026#34;/hello\u0026#34;) public ApiResponse hello(@RequestParam(\u0026#34;abc\u0026#34;) String abc) { return new ApiResponse(1000, \u0026#34;hello world\u0026#34; + abc, \u0026#34;success\u0026#34;); } } \u0026hellip;.\npost method 获取参数 ","date":"2025-02-27T00:00:00Z","permalink":"http://localhost:1313/hugo-myblog/p/spring/","title":"spring"},{"content":"前言：为什么选择Hugo？ Hugo是由Go语言编写的静态网站生成器，凭借以下三大核心优势成为技术博客作者的首选工具：\n⚡ 闪电般的编译速度\n1秒生成数千页面，告别传统生成器的漫长等待 🎨 丰富的主题生态\n3000+免费主题一键安装，支持高度自定义 ✍️ 极简的Markdown写作体验\n纯文本创作，搭配LiveReload实时预览 无需数据库、无需后端，仅需一个可执行文件即可开启创作之旅，让内容创作者真正实现「专注写作，极致高效」。\n安装hugo 首先打开hugo官网，点开左上角标签栏的github，然后点tags看历史版本\n或者也可以直接打开网址 (https://github.com/gohugoio/hugo/tags)\n选择你想要下载的版本，这里拿Windows示范，如果是Linux用户则选择对应架构的 .tar.gz 文件 解压后就安装成功了，在这个界面下打开cmd，然后敲入命令hugo new site your_site_name就可以搭建你的第一个网站了，可以看到目录下多了一个文件夹 最后再配置一下环境变量：\nWin+S搜索「编辑系统环境变量」 点击「环境变量」→ 双击「Path」 添加新路径：C:\\Hugo\\bin 这个时候点进你刚刚新创建的文件夹，并打开cmd，输入hugo server -D即可运行，并在本地调试你的网页\n选择主题 可以在(https://themes.gohugo.io/)中挑选你心仪的主题\n","date":"2025-02-25T17:22:51+08:00","image":"http://localhost:1313/hugo-myblog/p/hugo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/cover_hu_2307260c751d0e0b.jpg","permalink":"http://localhost:1313/hugo-myblog/p/hugo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/","title":"Hugo搭建教程"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"http://localhost:1313/hugo-myblog/p/shortcodes/cover_hu_5667347daefb4230.jpg","permalink":"http://localhost:1313/hugo-myblog/p/shortcodes/","title":"Shortcodes"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"http://localhost:1313/hugo-myblog/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"http://localhost:1313/hugo-myblog/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"http://localhost:1313/hugo-myblog/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"http://localhost:1313/hugo-myblog/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"http://localhost:1313/hugo-myblog/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"http://localhost:1313/hugo-myblog/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"http://localhost:1313/hugo-myblog/p/emoji-support/","title":"Emoji Support"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"http://localhost:1313/hugo-myblog/p/","title":""}]